$date
	Fri Jul 21 17:18:00 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module lift_controller_tb $end
$var wire 1 ! out_up_direction $end
$var wire 1 " out_ready $end
$var wire 1 # out_down_direction $end
$var wire 1 $ out_door_opening $end
$var wire 1 % out_door_closing $end
$var reg 1 & clk $end
$var reg 1 ' in0 $end
$var reg 1 ( in1 $end
$var reg 1 ) in10 $end
$var reg 1 * in2 $end
$var reg 1 + in3 $end
$var reg 1 , in4 $end
$var reg 1 - in5 $end
$var reg 1 . in6 $end
$var reg 1 / in7 $end
$var reg 1 0 in8 $end
$var reg 1 1 in9 $end
$var reg 1 2 in_door_close $end
$var reg 1 3 in_door_obstacle $end
$var reg 1 4 in_door_open $end
$scope module ucl $end
$var wire 1 & clk $end
$var wire 1 ' in0 $end
$var wire 1 ( in1 $end
$var wire 1 ) in10 $end
$var wire 1 * in2 $end
$var wire 1 + in3 $end
$var wire 1 , in4 $end
$var wire 1 - in5 $end
$var wire 1 . in6 $end
$var wire 1 / in7 $end
$var wire 1 0 in8 $end
$var wire 1 1 in9 $end
$var wire 1 2 in_door_close $end
$var wire 1 3 in_door_obstacle $end
$var wire 1 4 in_door_open $end
$var wire 1 5 reached $end
$var wire 32 6 pfloor [31:0] $end
$var wire 1 ! out_up_direction $end
$var wire 1 " out_ready $end
$var wire 1 # out_down_direction $end
$var wire 1 $ out_door_opening $end
$var wire 1 % out_door_closing $end
$var wire 32 7 nfloor [31:0] $end
$var wire 32 8 current_state [31:0] $end
$scope module cu $end
$var wire 1 & clk $end
$var wire 1 ' in0 $end
$var wire 1 ( in1 $end
$var wire 1 ) in10 $end
$var wire 1 * in2 $end
$var wire 1 + in3 $end
$var wire 1 , in4 $end
$var wire 1 - in5 $end
$var wire 1 . in6 $end
$var wire 1 / in7 $end
$var wire 1 0 in8 $end
$var wire 1 1 in9 $end
$var wire 1 2 in_door_close $end
$var wire 1 3 in_door_obstacle $end
$var wire 1 4 in_door_open $end
$var wire 1 5 reached $end
$var wire 1 ! out_up_direction $end
$var wire 1 " out_ready $end
$var wire 1 # out_down_direction $end
$var wire 1 $ out_door_opening $end
$var wire 1 % out_door_closing $end
$var reg 32 9 current_state [31:0] $end
$var reg 1 : dir $end
$var reg 32 ; nfloor [31:0] $end
$var reg 32 < pfloor [31:0] $end
$upscope $end
$scope module ti $end
$var wire 1 & clk $end
$var wire 32 = current_state [31:0] $end
$var wire 32 > nfloor [31:0] $end
$var wire 32 ? pfloor [31:0] $end
$var reg 1 @ flag $end
$var reg 1 5 reached $end
$var integer 32 A counter [31:0] $end
$var integer 32 B speed [31:0] $end
$var integer 32 C targetcount [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx C
b1 B
bx A
1@
b0 ?
b0 >
b11 =
b0 <
b0 ;
1:
b11 9
b11 8
b0 7
b0 6
x5
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
1"
0!
$end
#10
1&
#20
0&
1,
#30
b100 7
b100 ;
b100 >
1&
#40
0&
#50
1!
0"
b100 8
b100 9
b100 =
1&
#60
0&
#70
b100 C
05
0@
b1 A
1&
#80
0&
#90
b10 A
1&
#100
0&
#110
b11 A
1&
#120
0&
#130
1$
0!
b100 6
b100 <
b100 ?
b1 8
b1 9
b1 =
1@
15
b1 A
1&
#135
05
#140
0&
#150
1%
0$
b10 8
b10 9
b10 =
1&
#160
0&
#170
0%
1"
b11 8
b11 9
b11 =
1&
#180
0&
10
#190
b1000 7
b1000 ;
b1000 >
1&
#200
0&
#210
1!
0"
0@
b100 8
b100 9
b100 =
1&
#220
0&
#230
b10 A
1&
1'
#240
0&
#250
b11 A
1&
#260
0&
#270
1$
0!
0:
b1000 6
b1000 <
b1000 ?
b1 8
b1 9
b1 =
1@
15
b1 A
1&
#275
05
#280
0&
#290
1%
0$
b10 8
b10 9
b10 =
b100 7
b100 ;
b100 >
1&
#300
0&
#310
0%
1"
b11 8
b11 9
b11 =
1&
#320
0&
#330
1#
0"
b101 8
b101 9
b101 =
1&
#340
0&
#350
0@
1&
#360
0&
#370
b10 A
1&
#380
0&
#390
b11 A
1&
#400
0&
#410
1$
0#
b100 6
b100 <
b100 ?
b1 8
b1 9
b1 =
1@
15
b1 A
1&
#415
05
#420
0&
#430
1%
0$
b0 7
b0 ;
b0 >
b10 8
b10 9
b10 =
1&
#440
0&
#450
0%
1"
b11 8
b11 9
b11 =
1&
#460
0&
#470
1#
0"
b101 8
b101 9
b101 =
1&
#480
0&
#490
0@
1&
#500
0&
#510
b10 A
1&
#520
0&
#530
b11 A
1&
#540
0&
#550
1$
0#
1:
b0 6
b0 <
b0 ?
b1 8
b1 9
b1 =
1@
15
b1 A
1&
#555
05
#560
0&
#570
1%
0$
b10 8
b10 9
b10 =
b100 7
b100 ;
b100 >
1&
#580
0&
#590
0%
1"
b11 8
b11 9
b11 =
1&
#600
0&
